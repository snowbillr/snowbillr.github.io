{"version":3,"sources":["scripts/background/point.js","scripts/background/point-grid.js","scripts/background/point-swap-animation.js","scripts/background/point-grid-background.js","scripts/console-message.js","scripts/index.js"],"names":["Point","gridX","gridY","size","displayX","displayY","visible","newPoint","ctx","fillStyle","fillRect","PointGrid","pointDistance","displayWidth","displayHeight","resize","points","horizontalPointCount","Math","ceil","verticalPointCount","xPadding","yPadding","x","y","push","forEach","point","render","firstPoint","shuffleArray","filter","secondPoint","selectVisibleCardinalPoints","findPoint","find","a","i","length","j","floor","random","PointSwapAnimation","callback","frameDuration","frame","isRunning","callbackCalled","clone","originalDisplayCoords","xDistance","yDistance","t","b","c","d","cos","PI","ease","PointGridBackground","backgroundCanvas","document","querySelector","getContext","pointGrid","canvas","clientWidth","clientHeight","pointSwapAnimations","addResizeListener","startSpawnLoop","mainLoop","window","addEventListener","innerWidth","innerHeight","width","height","setInterval","selectVisibleAdjacentPoints","animation","splice","indexOf","update","requestAnimationFrame","pointSwapAnimation","clear","ConsoleMessage","console","log","pointGridBackground","start","consoleMessage","print"],"mappings":";;AKAA;;AACA;;AAEA,IAAM0F,mBAAmB,GAAG,IAAI/B,wCAAJ,EAA5B;AFHA,AFAA,AIIA+B,mBAAmB,CAACC,KAApB;AAEA,IAAMC,cAAc,GAAG,IAAIL,8BAAJ,EAAvB;AFLA,AEMAK,cAAc,CAACC,KAAf;;;;IHPanD,AFAA1C,AIAAuF;;IHEA5E;ACDX,AFAA,iBAAYV,KAAZ,EAAmBC,KAAnB,CEAY2B,CFAc,SEA1B,EAAwBG,WAAxB,EAAqCW,QAArC,EAA+C;AAAA,AFArB;ACE1B,qBAAY/B,aAAZ,EAA2BC,YAA3B,EAAyCC,aAAzC,EAAwD;AAAA,ACDtD,AFAA,SEAK8B,AFAAzC,IAAL,GAAY,CAAZ,KEAA,GAAqB,EAArB,CAD6C,CACpB;AFEzB,SAAKF,KAAL,GAAaA,KAAb;ACAA,ACDA,AFEA,SCDKW,ACDAiC,AFEA3C,KEFL,AFEA,GEFa,AFEAA,CEFb,IDCA,ADCA,GCDqBU,aAArB;AACA,ACDA,AFGA,SCFKG,ACDA+B,AFGA1C,MCFL,CAAYS,CDEZ,CEHA,EFGgB,CEHC,AFGjB,IEHA,GDCA,AGJM,EHIoBC,aAA1B;AACD,ACAC,AFEA,AINA0E,MAAAA,GFIK7C,AFEAtC,IINE,CAACoF,GFIR,AFEA,AINA,GFIgB9C,AFEA,CAAhB,OEFA;AACA,AFGA,AIHD,SFAMI,AFGAzC,OAAL,GAAe,IEHf,AFGA,GEHsB,KAAtB;AAEA,AFED,IGRUqD,KDMJ9B,UAAL,GAAkBA,UAAU,CAACmB,KAAX,EAAlB;AACA,SAAKhB,WAAL,GAAmBA,WAAW,CAACgB,KAAZ,EAAnB;AAEA,SAAKC,kBDJApC,GCIL,GAA6B,QDJVC,eAAe;AEJpC,AFKE,ACIEe,MAAAA,KDJGb,KCIO,CDJZ,CCIc,EDJA,EAAd,WELY;AAAA,AFOZ,ACGIZ,QAAAA,GDHCa,KCGO,EAAEY,UAAU,AFDlB,CECmBzB,EDHzB,GAA4Bc,GCEd,CDFkB,CAACC,IAAL,CAAUN,YAAY,GAAG,KAAKD,aAA9B,CAA5B;AACA,ACGIP,AFDJ,QECIA,EFDEE,CCFDa,KCGO,EAAES,AFDA,GAAG,IAAI7B,GECG,CDHxB,ACGyBK,CFDR,CAAU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","file":"scripts.bcf3243b.js","sourceRoot":"..","sourcesContent":["export class Point {\n  constructor(gridX, gridY) {\n    this.size = 3;\n\n    this.gridX = gridX;\n    this.gridY = gridY;\n\n    this.displayX = 0;\n    this.displayY = 0;\n\n    this.visible = true;\n  }\n\n  clone() {\n    const newPoint = new Point(this.gridX, this.gridY);\n    newPoint.displayX = this.displayX;\n    newPoint.displayY = this.displayY;\n\n    return newPoint;\n  }\n\n  render(ctx) {\n    if (this.visible) {\n      ctx.fillStyle = '#ccc';\n      ctx.fillRect(this.displayX, this.displayY, this.size, this.size);\n    }\n  }\n}\n","import { Point } from './point';\n\nexport class PointGrid {\n  constructor(pointDistance, displayWidth, displayHeight) {\n    this.pointDistance = pointDistance;\n    this.resize(displayWidth, displayHeight);\n  }\n\n  resize(displayWidth, displayHeight) {\n    this.points = [];\n\n    this.horizontalPointCount = Math.ceil(displayWidth / this.pointDistance);\n    this.verticalPointCount = Math.ceil(displayHeight / this.pointDistance);\n\n    this.xPadding = (displayWidth - (this.horizontalPointCount - 1) * this.pointDistance) / 2;\n    this.yPadding = (displayHeight - (this.verticalPointCount - 1) * this.pointDistance) / 2;\n\n    for (let x = 0; x < this.horizontalPointCount; x++) {\n      for (let y = 0; y < this.verticalPointCount; y++) {\n        this.points.push(new Point(x, y));\n      }\n    }\n  }\n\n  update() {\n    this.points.forEach(point => {\n      point.displayX = point.gridX * this.pointDistance + this.xPadding;\n      point.displayY = point.gridY * this.pointDistance + this.yPadding;\n    });\n  }\n\n  render(ctx) {\n    this.points.forEach(point => {\n      point.render(ctx);\n    });\n  }\n\n  selectVisibleAdjacentPoints() {\n    const firstPoint = this.shuffleArray(this.points.filter(point => point.visible))[0];\n    if (firstPoint == null) {\n      return [null, null];\n    }\n\n    const secondPoint = this.shuffleArray(this.selectVisibleCardinalPoints(firstPoint))[0];\n\n    return [firstPoint, secondPoint];\n  }\n\n  selectVisibleCardinalPoints({ gridX, gridY }) {\n    return [\n      this.findPoint(gridX + 1, gridY),\n      this.findPoint(gridX - 1, gridY),\n      this.findPoint(gridX, gridY + 1),\n      this.findPoint(gridX, gridY - 1),\n    ].filter(point => point != null)\n     .filter(point => point.visible);\n  }\n\n  findPoint(gridX, gridY) {\n    return this.points.find(point => point.gridX === gridX && point.gridY === gridY);\n  }\n\n  // taken from https://stackoverflow.com/a/6274381/1950372\n  shuffleArray(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n","export class PointSwapAnimation {\n  constructor(firstPoint, secondPoint, callback) {\n    this.frameDuration = 60; // in frames\n    this.frame = 0;\n    this.isRunning = true;\n\n    this.callback = callback;\n    this.callbackCalled = false;\n\n    this.firstPoint = firstPoint.clone();\n    this.secondPoint = secondPoint.clone();\n\n    this.originalDisplayCoords = {\n      firstPoint: {\n        displayX: firstPoint.displayX,\n        displayY: firstPoint.displayY,\n      },\n      secondPoint: {\n        displayX: secondPoint.displayX,\n        displayY: secondPoint.displayY,\n      }\n    };\n\n    this.xDistance = firstPoint.displayX - secondPoint.displayX;\n    this.yDistance = firstPoint.displayY - secondPoint.displayY;\n  }\n\n  ease(t, b, c, d) {\n    return -c/2 * (Math.cos(Math.PI*t/d) - 1) + b;\n  }\n\n  update() {\n    this.frame += 1;\n\n    if (this.frame > this.frameDuration) {\n      this.isRunning = false;\n\n      if (!this.callbackCalled) {\n        this.callback(this);\n        this.callbackCalled = true;\n      }\n    } else {\n      this.firstPoint.displayX = this.ease(this.frame, this.originalDisplayCoords.firstPoint.displayX, -this.xDistance, this.frameDuration);\n      this.firstPoint.displayY = this.ease(this.frame, this.originalDisplayCoords.firstPoint.displayY, -this.yDistance, this.frameDuration);\n\n      this.secondPoint.displayX = this.ease(this.frame, this.originalDisplayCoords.secondPoint.displayX, this.xDistance, this.frameDuration);\n      this.secondPoint.displayY = this.ease(this.frame, this.originalDisplayCoords.secondPoint.displayY, this.yDistance, this.frameDuration);\n    }\n  }\n\n  render(ctx) {\n    if (this.isRunning) {\n      this.firstPoint.render(ctx);\n      this.secondPoint.render(ctx);\n    }\n  }\n}\n","import { PointGrid } from './point-grid';\nimport { PointSwapAnimation } from './point-swap-animation';\n\nexport class PointGridBackground {\n  constructor() {\n    this.backgroundCanvas = document.querySelector('#background-canvas');\n    this.ctx = this.backgroundCanvas.getContext('2d');\n\n    this.pointGrid = new PointGrid(100, this.ctx.canvas.clientWidth, this.ctx.canvas.clientHeight);\n    this.pointSwapAnimations = [];\n  }\n\n  start() {\n    this.addResizeListener();\n    this.resize();\n\n    this.startSpawnLoop();\n\n    this.mainLoop();\n  }\n\n  addResizeListener() {\n    window.addEventListener('resize', this.resize);\n  }\n\n  resize() {\n    const displayWidth = window.innerWidth;\n    const displayHeight = window.innerHeight;\n\n    this.backgroundCanvas.width = displayWidth;\n    this.backgroundCanvas.height = displayHeight;\n\n    this.pointGrid.resize(displayWidth, displayHeight);\n  }\n\n  startSpawnLoop() {\n    setInterval(() => {\n      const [firstPoint, secondPoint] = this.pointGrid.selectVisibleAdjacentPoints();\n\n      if (firstPoint == null || secondPoint == null) return;\n\n      firstPoint.visible = false;\n      secondPoint.visible = false;\n\n      this.pointSwapAnimations.push(new PointSwapAnimation(firstPoint, secondPoint, animation => {\n        firstPoint.visible = true;\n        secondPoint.visible = true;\n\n        this.pointSwapAnimations.splice(this.pointSwapAnimations.indexOf(animation), 1);\n      }));\n    }, 500)\n  }\n\n  mainLoop() {\n    this.update();\n    this.render();\n    requestAnimationFrame(() => this.mainLoop());\n  }\n\n  update() {\n    this.pointGrid.update();\n    this.pointSwapAnimations.forEach(pointSwapAnimation => pointSwapAnimation.update());\n  }\n\n  render() {\n    this.clear();\n    this.pointGrid.render(this.ctx);\n    this.pointSwapAnimations.forEach(pointSwapAnimation => pointSwapAnimation.render(this.ctx));\n  }\n\n  clear() {\n    this.ctx.fillStyle = '#fff';\n    this.ctx.fillRect(0, 0, this.ctx.canvas.clientWidth, this.ctx.canvas.clientHeight);\n  }\n}\n","export class ConsoleMessage {\n  print() {\n    console.log(`\n    Thanks for checking out my website!\n\n    You can contact me at billnreed@gmail.com if you'd like to get in touch.\n    `);\n  }\n}\n","import { PointGridBackground } from './background/point-grid-background';\nimport { ConsoleMessage } from './console-message';\n\nconst pointGridBackground = new PointGridBackground();\npointGridBackground.start();\n\nconst consoleMessage = new ConsoleMessage();\nconsoleMessage.print();\n"]}
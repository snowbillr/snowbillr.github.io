{"version":3,"sources":["scripts/background/point.js","scripts/background/point-grid.js","scripts/background/point-swap-animation.js","scripts/background/point-grid-background.js","scripts/console-message.js","scripts/index.js"],"names":["Point","gridX","gridY","size","displayX","displayY","visible","newPoint","ctx","fillStyle","fillRect","PointGrid","pointDistance","displayWidth","displayHeight","resize","points","horizontalPointCount","Math","ceil","verticalPointCount","xPadding","yPadding","x","y","push","forEach","point","render","firstPoint","shuffleArray","filter","selectVisibleCardinalPoints","findPoint","find","a","i","length","j","floor","random","PointSwapAnimation","secondPoint","callback","frameDuration","frame","isRunning","callbackCalled","clone","originalDisplayCoords","xDistance","yDistance","t","b","c","d","cos","PI","ease","PointGridBackground","backgroundCanvas","document","querySelector","getContext","pointGrid","canvas","clientWidth","clientHeight","pointSwapAnimations","addResizeListener","startSpawnLoop","mainLoop","window","addEventListener","innerWidth","innerHeight","width","height","setInterval","selectVisibleAdjacentPoints","animation","splice","indexOf","update","requestAnimationFrame","pointSwapAnimation","clear","ConsoleMessage","console","log","pointGridBackground","start","consoleMessage","print"],"mappings":"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","file":"scripts.13dcd191.46b266f8.js","sourceRoot":"..","sourcesContent":["export class Point {\n  constructor(gridX, gridY) {\n    this.size = 3;\n\n    this.gridX = gridX;\n    this.gridY = gridY;\n\n    this.displayX = 0;\n    this.displayY = 0;\n\n    this.visible = true;\n  }\n\n  clone() {\n    const newPoint = new Point(this.gridX, this.gridY);\n    newPoint.displayX = this.displayX;\n    newPoint.displayY = this.displayY;\n\n    return newPoint;\n  }\n\n  render(ctx) {\n    if (this.visible) {\n      ctx.fillStyle = '#ccc';\n      ctx.fillRect(this.displayX, this.displayY, this.size, this.size);\n    }\n  }\n}\n","import { Point } from './point';\n\nexport class PointGrid {\n  constructor(pointDistance, displayWidth, displayHeight) {\n    this.pointDistance = pointDistance;\n    this.resize(displayWidth, displayHeight);\n  }\n\n  resize(displayWidth, displayHeight) {\n    this.points = [];\n\n    this.horizontalPointCount = Math.ceil(displayWidth / this.pointDistance);\n    this.verticalPointCount = Math.ceil(displayHeight / this.pointDistance);\n\n    this.xPadding = (displayWidth - (this.horizontalPointCount - 1) * this.pointDistance) / 2;\n    this.yPadding = (displayHeight - (this.verticalPointCount - 1) * this.pointDistance) / 2;\n\n    for (let x = 0; x < this.horizontalPointCount; x++) {\n      for (let y = 0; y < this.verticalPointCount; y++) {\n        this.points.push(new Point(x, y));\n      }\n    }\n  }\n\n  update() {\n    this.points.forEach(point => {\n      point.displayX = point.gridX * this.pointDistance + this.xPadding;\n      point.displayY = point.gridY * this.pointDistance + this.yPadding;\n    });\n  }\n\n  render(ctx) {\n    this.points.forEach(point => {\n      point.render(ctx);\n    });\n  }\n\n  selectVisibleAdjacentPoints() {\n    const firstPoint = this.shuffleArray(this.points.filter(point => point.visible))[0];\n    if (firstPoint == null) {\n      return [null, null];\n    }\n\n    const secondPoint = this.shuffleArray(this.selectVisibleCardinalPoints(firstPoint))[0];\n\n    return [firstPoint, secondPoint];\n  }\n\n  selectVisibleCardinalPoints({ gridX, gridY }) {\n    return [\n      this.findPoint(gridX + 1, gridY),\n      this.findPoint(gridX - 1, gridY),\n      this.findPoint(gridX, gridY + 1),\n      this.findPoint(gridX, gridY - 1),\n    ].filter(point => point != null)\n     .filter(point => point.visible);\n  }\n\n  findPoint(gridX, gridY) {\n    return this.points.find(point => point.gridX === gridX && point.gridY === gridY);\n  }\n\n  // taken from https://stackoverflow.com/a/6274381/1950372\n  shuffleArray(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n","export class PointSwapAnimation {\n  constructor(firstPoint, secondPoint, callback) {\n    this.frameDuration = 60; // in frames\n    this.frame = 0;\n    this.isRunning = true;\n\n    this.callback = callback;\n    this.callbackCalled = false;\n\n    this.firstPoint = firstPoint.clone();\n    this.secondPoint = secondPoint.clone();\n\n    this.originalDisplayCoords = {\n      firstPoint: {\n        displayX: firstPoint.displayX,\n        displayY: firstPoint.displayY,\n      },\n      secondPoint: {\n        displayX: secondPoint.displayX,\n        displayY: secondPoint.displayY,\n      }\n    };\n\n    this.xDistance = firstPoint.displayX - secondPoint.displayX;\n    this.yDistance = firstPoint.displayY - secondPoint.displayY;\n  }\n\n  ease(t, b, c, d) {\n    return -c/2 * (Math.cos(Math.PI*t/d) - 1) + b;\n  }\n\n  update() {\n    this.frame += 1;\n\n    if (this.frame > this.frameDuration) {\n      this.isRunning = false;\n\n      if (!this.callbackCalled) {\n        this.callback(this);\n        this.callbackCalled = true;\n      }\n    } else {\n      this.firstPoint.displayX = this.ease(this.frame, this.originalDisplayCoords.firstPoint.displayX, -this.xDistance, this.frameDuration);\n      this.firstPoint.displayY = this.ease(this.frame, this.originalDisplayCoords.firstPoint.displayY, -this.yDistance, this.frameDuration);\n\n      this.secondPoint.displayX = this.ease(this.frame, this.originalDisplayCoords.secondPoint.displayX, this.xDistance, this.frameDuration);\n      this.secondPoint.displayY = this.ease(this.frame, this.originalDisplayCoords.secondPoint.displayY, this.yDistance, this.frameDuration);\n    }\n  }\n\n  render(ctx) {\n    if (this.isRunning) {\n      this.firstPoint.render(ctx);\n      this.secondPoint.render(ctx);\n    }\n  }\n}\n","import { PointGrid } from './point-grid';\nimport { PointSwapAnimation } from './point-swap-animation';\n\nexport class PointGridBackground {\n  constructor() {\n    this.backgroundCanvas = document.querySelector('#background-canvas');\n    this.ctx = this.backgroundCanvas.getContext('2d');\n\n    this.pointGrid = new PointGrid(100, this.ctx.canvas.clientWidth, this.ctx.canvas.clientHeight);\n    this.pointSwapAnimations = [];\n  }\n\n  start() {\n    this.addResizeListener();\n    this.resize();\n\n    this.startSpawnLoop();\n\n    this.mainLoop();\n  }\n\n  addResizeListener() {\n    window.addEventListener('resize', this.resize);\n  }\n\n  resize() {\n    const displayWidth = window.innerWidth;\n    const displayHeight = window.innerHeight;\n\n    this.backgroundCanvas.width = displayWidth;\n    this.backgroundCanvas.height = displayHeight;\n\n    this.pointGrid.resize(displayWidth, displayHeight);\n  }\n\n  startSpawnLoop() {\n    setInterval(() => {\n      const [firstPoint, secondPoint] = this.pointGrid.selectVisibleAdjacentPoints();\n\n      if (firstPoint == null || secondPoint == null) return;\n\n      firstPoint.visible = false;\n      secondPoint.visible = false;\n\n      this.pointSwapAnimations.push(new PointSwapAnimation(firstPoint, secondPoint, animation => {\n        firstPoint.visible = true;\n        secondPoint.visible = true;\n\n        this.pointSwapAnimations.splice(this.pointSwapAnimations.indexOf(animation), 1);\n      }));\n    }, 500)\n  }\n\n  mainLoop() {\n    this.update();\n    this.render();\n    requestAnimationFrame(() => this.mainLoop());\n  }\n\n  update() {\n    this.pointGrid.update();\n    this.pointSwapAnimations.forEach(pointSwapAnimation => pointSwapAnimation.update());\n  }\n\n  render() {\n    this.clear();\n    this.pointGrid.render(this.ctx);\n    this.pointSwapAnimations.forEach(pointSwapAnimation => pointSwapAnimation.render(this.ctx));\n  }\n\n  clear() {\n    this.ctx.fillStyle = '#fff';\n    this.ctx.fillRect(0, 0, this.ctx.canvas.clientWidth, this.ctx.canvas.clientHeight);\n  }\n}\n","export class ConsoleMessage {\n  print() {\n    console.log(`\n    Thanks for checking out my website!\n\n    You can contact me at billnreed@gmail.com if you'd like to get in touch.\n    `);\n  }\n}\n","import { PointGridBackground } from './background/point-grid-background';\nimport { ConsoleMessage } from './console-message';\n\nconst pointGridBackground = new PointGridBackground();\npointGridBackground.start();\n\nconst consoleMessage = new ConsoleMessage();\nconsoleMessage.print();\n"]}
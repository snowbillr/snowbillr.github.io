{"version":3,"sources":["scripts/background/point.js","scripts/background/point-grid.js","scripts/background/point-swap-animation.js","scripts/background/point-grid-background.js","scripts/console-message.js","scripts/index.js"],"names":["Point","gridX","gridY","size","displayX","displayY","visible","newPoint","ctx","fillStyle","fillRect","PointGrid","pointDistance","displayWidth","displayHeight","resize","points","horizontalPointCount","Math","ceil","verticalPointCount","xPadding","yPadding","x","y","push","forEach","point","render","firstPoint","shuffleArray","filter","secondPoint","selectVisibleCardinalPoints","findPoint","find","a","i","length","j","floor","random","PointSwapAnimation","callback","frameDuration","frame","isRunning","callbackCalled","clone","originalDisplayCoords","xDistance","yDistance","t","b","c","d","cos","PI","ease","PointGridBackground","backgroundCanvas","document","querySelector","getContext","pointGrid","canvas","clientWidth","clientHeight","pointSwapAnimations","addResizeListener","startSpawnLoop","mainLoop","window","addEventListener","innerWidth","innerHeight","width","height","setInterval","selectVisibleAdjacentPoints","animation","splice","indexOf","update","requestAnimationFrame","pointSwapAnimation","clear","ConsoleMessage","console","log","pointGridBackground","start","consoleMessage","print"],"mappings":"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","file":"scripts.bcf3243b.map","sourceRoot":"..","sourcesContent":["export class Point {\n  constructor(gridX, gridY) {\n    this.size = 3;\n\n    this.gridX = gridX;\n    this.gridY = gridY;\n\n    this.displayX = 0;\n    this.displayY = 0;\n\n    this.visible = true;\n  }\n\n  clone() {\n    const newPoint = new Point(this.gridX, this.gridY);\n    newPoint.displayX = this.displayX;\n    newPoint.displayY = this.displayY;\n\n    return newPoint;\n  }\n\n  render(ctx) {\n    if (this.visible) {\n      ctx.fillStyle = '#ccc';\n      ctx.fillRect(this.displayX, this.displayY, this.size, this.size);\n    }\n  }\n}\n","import { Point } from './point';\n\nexport class PointGrid {\n  constructor(pointDistance, displayWidth, displayHeight) {\n    this.pointDistance = pointDistance;\n    this.resize(displayWidth, displayHeight);\n  }\n\n  resize(displayWidth, displayHeight) {\n    this.points = [];\n\n    this.horizontalPointCount = Math.ceil(displayWidth / this.pointDistance);\n    this.verticalPointCount = Math.ceil(displayHeight / this.pointDistance);\n\n    this.xPadding = (displayWidth - (this.horizontalPointCount - 1) * this.pointDistance) / 2;\n    this.yPadding = (displayHeight - (this.verticalPointCount - 1) * this.pointDistance) / 2;\n\n    for (let x = 0; x < this.horizontalPointCount; x++) {\n      for (let y = 0; y < this.verticalPointCount; y++) {\n        this.points.push(new Point(x, y));\n      }\n    }\n  }\n\n  update() {\n    this.points.forEach(point => {\n      point.displayX = point.gridX * this.pointDistance + this.xPadding;\n      point.displayY = point.gridY * this.pointDistance + this.yPadding;\n    });\n  }\n\n  render(ctx) {\n    this.points.forEach(point => {\n      point.render(ctx);\n    });\n  }\n\n  selectVisibleAdjacentPoints() {\n    const firstPoint = this.shuffleArray(this.points.filter(point => point.visible))[0];\n    if (firstPoint == null) {\n      return [null, null];\n    }\n\n    const secondPoint = this.shuffleArray(this.selectVisibleCardinalPoints(firstPoint))[0];\n\n    return [firstPoint, secondPoint];\n  }\n\n  selectVisibleCardinalPoints({ gridX, gridY }) {\n    return [\n      this.findPoint(gridX + 1, gridY),\n      this.findPoint(gridX - 1, gridY),\n      this.findPoint(gridX, gridY + 1),\n      this.findPoint(gridX, gridY - 1),\n    ].filter(point => point != null)\n     .filter(point => point.visible);\n  }\n\n  findPoint(gridX, gridY) {\n    return this.points.find(point => point.gridX === gridX && point.gridY === gridY);\n  }\n\n  // taken from https://stackoverflow.com/a/6274381/1950372\n  shuffleArray(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n","export class PointSwapAnimation {\n  constructor(firstPoint, secondPoint, callback) {\n    this.frameDuration = 60; // in frames\n    this.frame = 0;\n    this.isRunning = true;\n\n    this.callback = callback;\n    this.callbackCalled = false;\n\n    this.firstPoint = firstPoint.clone();\n    this.secondPoint = secondPoint.clone();\n\n    this.originalDisplayCoords = {\n      firstPoint: {\n        displayX: firstPoint.displayX,\n        displayY: firstPoint.displayY,\n      },\n      secondPoint: {\n        displayX: secondPoint.displayX,\n        displayY: secondPoint.displayY,\n      }\n    };\n\n    this.xDistance = firstPoint.displayX - secondPoint.displayX;\n    this.yDistance = firstPoint.displayY - secondPoint.displayY;\n  }\n\n  ease(t, b, c, d) {\n    return -c/2 * (Math.cos(Math.PI*t/d) - 1) + b;\n  }\n\n  update() {\n    this.frame += 1;\n\n    if (this.frame > this.frameDuration) {\n      this.isRunning = false;\n\n      if (!this.callbackCalled) {\n        this.callback(this);\n        this.callbackCalled = true;\n      }\n    } else {\n      this.firstPoint.displayX = this.ease(this.frame, this.originalDisplayCoords.firstPoint.displayX, -this.xDistance, this.frameDuration);\n      this.firstPoint.displayY = this.ease(this.frame, this.originalDisplayCoords.firstPoint.displayY, -this.yDistance, this.frameDuration);\n\n      this.secondPoint.displayX = this.ease(this.frame, this.originalDisplayCoords.secondPoint.displayX, this.xDistance, this.frameDuration);\n      this.secondPoint.displayY = this.ease(this.frame, this.originalDisplayCoords.secondPoint.displayY, this.yDistance, this.frameDuration);\n    }\n  }\n\n  render(ctx) {\n    if (this.isRunning) {\n      this.firstPoint.render(ctx);\n      this.secondPoint.render(ctx);\n    }\n  }\n}\n","import { PointGrid } from './point-grid';\nimport { PointSwapAnimation } from './point-swap-animation';\n\nexport class PointGridBackground {\n  constructor() {\n    this.backgroundCanvas = document.querySelector('#background-canvas');\n    this.ctx = this.backgroundCanvas.getContext('2d');\n\n    this.pointGrid = new PointGrid(100, this.ctx.canvas.clientWidth, this.ctx.canvas.clientHeight);\n    this.pointSwapAnimations = [];\n  }\n\n  start() {\n    this.addResizeListener();\n    this.resize();\n\n    this.startSpawnLoop();\n\n    this.mainLoop();\n  }\n\n  addResizeListener() {\n    window.addEventListener('resize', this.resize);\n  }\n\n  resize() {\n    const displayWidth = window.innerWidth;\n    const displayHeight = window.innerHeight;\n\n    this.backgroundCanvas.width = displayWidth;\n    this.backgroundCanvas.height = displayHeight;\n\n    this.pointGrid.resize(displayWidth, displayHeight);\n  }\n\n  startSpawnLoop() {\n    setInterval(() => {\n      const [firstPoint, secondPoint] = this.pointGrid.selectVisibleAdjacentPoints();\n\n      if (firstPoint == null || secondPoint == null) return;\n\n      firstPoint.visible = false;\n      secondPoint.visible = false;\n\n      this.pointSwapAnimations.push(new PointSwapAnimation(firstPoint, secondPoint, animation => {\n        firstPoint.visible = true;\n        secondPoint.visible = true;\n\n        this.pointSwapAnimations.splice(this.pointSwapAnimations.indexOf(animation), 1);\n      }));\n    }, 500)\n  }\n\n  mainLoop() {\n    this.update();\n    this.render();\n    requestAnimationFrame(() => this.mainLoop());\n  }\n\n  update() {\n    this.pointGrid.update();\n    this.pointSwapAnimations.forEach(pointSwapAnimation => pointSwapAnimation.update());\n  }\n\n  render() {\n    this.clear();\n    this.pointGrid.render(this.ctx);\n    this.pointSwapAnimations.forEach(pointSwapAnimation => pointSwapAnimation.render(this.ctx));\n  }\n\n  clear() {\n    this.ctx.fillStyle = '#fff';\n    this.ctx.fillRect(0, 0, this.ctx.canvas.clientWidth, this.ctx.canvas.clientHeight);\n  }\n}\n","export class ConsoleMessage {\n  print() {\n    console.log(`\n    Thanks for checking out my website!\n\n    You can contact me at billnreed@gmail.com if you'd like to get in touch.\n    `);\n  }\n}\n","import { PointGridBackground } from './background/point-grid-background';\nimport { ConsoleMessage } from './console-message';\n\nconst pointGridBackground = new PointGridBackground();\npointGridBackground.start();\n\nconst consoleMessage = new ConsoleMessage();\nconsoleMessage.print();\n"]}